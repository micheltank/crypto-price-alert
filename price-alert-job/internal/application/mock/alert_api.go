// Code generated by MockGen. DO NOT EDIT.
// Source: alert_api.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/micheltank/crypto-price-alert/price-alert-job/internal/domain"
)

// MockAlertApi is a mock of AlertApi interface.
type MockAlertApi struct {
	ctrl     *gomock.Controller
	recorder *MockAlertApiMockRecorder
}

// MockAlertApiMockRecorder is the mock recorder for MockAlertApi.
type MockAlertApiMockRecorder struct {
	mock *MockAlertApi
}

// NewMockAlertApi creates a new mock instance.
func NewMockAlertApi(ctrl *gomock.Controller) *MockAlertApi {
	mock := &MockAlertApi{ctrl: ctrl}
	mock.recorder = &MockAlertApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertApi) EXPECT() *MockAlertApiMockRecorder {
	return m.recorder
}

// GetAlerts mocks base method.
func (m *MockAlertApi) GetAlerts(coin string, price float64) (domain.Alerts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAlerts", coin, price)
	ret0, _ := ret[0].(domain.Alerts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAlerts indicates an expected call of GetAlerts.
func (mr *MockAlertApiMockRecorder) GetAlerts(coin, price interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlerts", reflect.TypeOf((*MockAlertApi)(nil).GetAlerts), coin, price)
}
